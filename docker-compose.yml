version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: boule-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: boule-petanque
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - boule-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: boule-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - boule-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: boule-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/boule-petanque?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_super_secret_key_change_this_in_production
      JWT_EXPIRE: 7d
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - boule-network
    command: npm run dev

  # AI/ML Service
  ai-ml:
    build:
      context: ./ai-ml
      dockerfile: Dockerfile
    container_name: boule-ai-ml
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      FLASK_ENV: development
      FLASK_APP: app.py
    volumes:
      - ./ai-ml:/app
      - ai_models:/app/models
    networks:
      - boule-network
    command: flask run --host=0.0.0.0

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: boule-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - ai-ml
    networks:
      - boule-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  ai_models:
    driver: local

networks:
  boule-network:
    driver: bridge
